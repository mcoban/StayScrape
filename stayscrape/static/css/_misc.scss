$break-mobile-s: 320px;
$break-mobile-m: 375px;
$break-mobile-l: 425px;
$break-tablet: 768px;
$break-laptop: 1024px;
$break-large: 1440px;
$break-xlarge: 2048px;



$margins: ( ("margin", "margin"), ("marginTop", "margin-top"), ("marginRight", "margin-right"), ("marginBottom", "margin-bottom"), ("marginLeft", "margin-left") );
$paddings: ( ("padding", "padding"), ("paddingTop", "padding-top"), ("paddingRight", "padding-right"), ("paddingBottom", "padding-bottom"), ("paddingLeft", "padding-left") );

@mixin createMarginsPaddings($selectors, $preffix: "") {
	$preffix: if($preffix, $preffix + "-", "");
	@each $item in $selectors {
		$class: nth($item, 1);
		$prop: nth($item, 2);
		@for $i from 0 through 10 {
			$val: $i * 5;
			.#{$preffix}#{$class}#{$val} {
				#{$prop}: $val;
			}
		}
	}
}

@mixin createFontSizes($preffix: "") {
	@for $i from 10 through 60 {
		.#{$preffix}#{"fontSize"}#{$i} {
			font-size: #{$i}px;
		}
	}
}



@include createMarginsPaddings($margins);
@include createFontSizes();


@media screen and (max-width: $break-mobile-l) {
	@include createMarginsPaddings($margins, "xs");
	@include createFontSizes();
}

@media screen and (min-width: $break-mobile-l + 1) and (max-width: $break-tablet) {
	@include createMarginsPaddings($margins, "sm");
	@include createFontSizes();
}

@media screen and (min-width: $break-tablet + 1) and (max-width: $break-laptop) {
	@include createMarginsPaddings($margins, "md");
	@include createFontSizes();
}

@media screen and (min-width: $break-laptop + 1) and (max-width: $break-large) {
	@include createMarginsPaddings($margins, "lg");
	@include createFontSizes();
}

@media screen and (min-width: $break-large + 1) and (max-width: $break-xlarge) {
	@include createMarginsPaddings($margins, "xl");
	@include createFontSizes();
}




@each $fw in (100, 200, 300, 400, 500, 600, 700) {
	.fontWeight#{$fw} {
		font-weight: #{$fw};
	}
}


@for $i from 10 through 50 {
	.fontSize#{$i} {
		font-size: #{$i}px !important;
	}
}


@for $i from 1 through 150 {
	$value: $i * 5;
	.width#{$value} {
		width: #{$value}px;
	}
	.height#{$value} {
		height: #{$value}px;
	}
}

@media screen and (max-width: $break-mobile-s) {

	@for $i from 1 through 150 {
		$value: $i * 5;
		.xs-width#{$value} {
			width: #{$value}px;
		}
		.xs-height#{$value} {
			height: #{$value}px;
		}
	}	
}











.block {
	display: block;
}

.fullWidth {
	width: 100%;
}

.floatLeft {
	float: left;
}

.floatRight {
	float: right;
}

.backgroundSizeCover {
	background-size: cover;
}

.textScreenReader {
	width: 1px !important;
	height: 1px !important;
	color: rgba(255,255,255, 0) !important;
}

.backgroundColorGray {
	background-color: #f0f0f0;
}

.letterSpacingTight {
	letter-spacing: -0.07em !important;
}

.lineHeightTighter {
	line-height: 1.1 !important;
}

.uppercase {
	text-transform: uppercase;
}

.onePixel {
	width: 1px !important;
	height: 1px !important;
	color: rgba(255,255,255,0);
	overflow: hidden;
}


